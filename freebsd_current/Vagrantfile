# -*- mode: ruby -*-
# vi: set ft=ruby :
usr_src_disk = './usr_src.vdi'
usr_obj_disk = './usr_obj.vdi'
if config.user.has?(:ARTIFACTS_KERNCONF)
  build_opts = 'KERNCONF='+ENV['ARTIFACTS_KERNCONF']
else
  build_opts = ''
if config.user.has?(:ARTIFACTS_BSD_VERSION)
  bsd_version = ENV['ARTIFACTS_BSD_VERSION']
else
  bsd_version = 14.0
Vagrant.configure("2") do |config|
  config.vm.guest = :freebsd
  if config.user.has?(:ARTIFACTS_KERNCONF)
    config.vm.provision "file", source: ENV['ARTIFACTS_KERNCONF'], destination: '/tmp'+ENV['ARTIFACTS_KERNCONF']
  config.vm.box = 'freebsd/FreeBSD-'+bsd_version+'-RELEASE'
  #config.vm.box_version = "2023.11.10"
  config.ssh.shell = "sh"
  config.vm.base_mac = "080027D14C66"
  config.vm.provider "virtualbox" do |v|
    unless File.exist?(usr_src_disk)
      v.customize ['createhd', '--filename', usr_src_disk, '--variant', 'Fixed', '--size', 5 * 1024]
    end
    unless File.exist?(usr_obj_disk)
      v.customize ['createhd', '--filename', usr_obj_disk, '--variant', 'Fixed', '--size', 20 * 1024]
    end
    v.memory= "2048"
    v.customize ['storageattach', :id,  '--storagectl', 'IDE Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', usr_src_disk]
    v.customize ['storageattach', :id,  '--storagectl', 'IDE Controller', '--port', 1, '--device', 1, '--type', 'hdd', '--medium', usr_obj_disk]
    v.cpus="4"
  end
  config.vm.provision "shell", inline: "newfs /dev/ada1 && mkdir -p /usr/src && mount /dev/ada1 /usr/src"
  config.vm.provision "shell", inline: "newfs /dev/ada2 && mkdir -p /usr/obj && mount /dev/ada2 /usr/obj"
  config.vm.provision "shell", inline: "pkg install -y git-lite"
  config.vm.provision "shell", inline: "git clone -b main --depth=1 https://git.freebsd.org/src.git /usr/src/current"
  config.vm.provision "shell", inline: "cd /usr/src/current && make -j4 buildworld "+build_opts+" && make -j4 buildkernel "+build_opts+" && make installkernel"+build_opts``
  # mostly interested in our build artifacts -- not calling mergemaster to edit configs or install world / pkg upgrade for an actual system upgrade
  config.vm.provision "shell", inline: "shutdown -r now"  
end
